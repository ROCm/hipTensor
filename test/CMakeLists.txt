
# Setup a test manifest
set(INSTALL_TEST_FILE "${CMAKE_CURRENT_BINARY_DIR}/install_CTestTestfile.cmake")
file(WRITE "${INSTALL_TEST_FILE}"
[=[
# This is a test file generated by rocWMMA for install time.
# It differs slightly from the default testfile, and you may encounter issues because of that.
]=]
)

# Target that will trigger build of all tests
add_custom_target(hiptensor_tests)

# Create test executables and deploy
function(add_hiptensor_test BINARY_NAME FILE_NAME)

    message( STATUS "adding hiptensor test: ${BINARY_NAME}")
    add_executable(${BINARY_NAME} ${FILE_NAME})

    # Test is similar to a client, however is built
    # under the hiptensor project. Therefore at build time,
    # propagate the build interface includes to make sure
    # hiptensor includes are captured.
    target_link_libraries(${BINARY_NAME} PRIVATE hiptensor::hiptensor "-L${HIP_CLANG_ROOT}/lib" "-Wl,-rpath=${HIP_CLANG_ROOT}/lib")
  
    # Build this test under custom target
    add_dependencies(hiptensor_tests ${BINARY_NAME})

    # Register with ctest
    add_test(NAME ${BINARY_NAME} COMMAND ${BINARY_NAME})

    # Install with rocm pkg
    rocm_install_targets(
    TARGETS ${BINARY_NAME}
    COMPONENT tests
    )

    # Add to testing manifest    
    get_target_property(EXE_NAME ${BINARY_NAME} RUNTIME_OUTPUT_NAME)
    if(EXE_NAME STREQUAL "EXE_NAME-NOTFOUND")
        get_target_property(EXE_NAME ${BINARY_NAME} OUTPUT_NAME)
        if(EXE_NAME STREQUAL "EXE_NAME-NOTFOUND")
            set(EXE_NAME "${BINARY_NAME}")
        endif()
    endif()
    file(APPEND "${INSTALL_TEST_FILE}" "add_test(${BINARY_NAME} \"../${BINARY_NAME}\")\n")
    
endfunction()

add_subdirectory(01_contraction)

rocm_install(
    FILES "${INSTALL_TEST_FILE}"
    DESTINATION "${CMAKE_INSTALL_BINDIR}/${PROJECT_NAME}"
    COMPONENT tests
    RENAME "CTestTestfile.cmake"
)
